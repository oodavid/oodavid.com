<!DOCTYPE html>
<!-- saved from url=(0022)http://localhost:1337/ -->
<html lang="en"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
  
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>CSS Framework</title>
  <link rel="stylesheet" type="text/css" href="./CSS Framework_files/framework.css">
  <script src="./CSS Framework_files/script.js"></script>
</head>
<body><script id="__bs_script__">//<![CDATA[
    document.write("<script async src='/browser-sync/browser-sync-client.js?v=2.23.7'><\/script>".replace("HOST", location.hostname));
//]]></script><script async="" src="./CSS Framework_files/browser-sync-client.js"></script>


  <header>
    <div class="page">
      <p>
        HEADER
      </p>
    </div>
  </header>

  <div class="page">
    <div class="card" load-html="./docs/inputs.html"><h1>Inputs</h1>
<p>
  <label>
    Example Text
    <input class="input" type="text" placeholder="Your Name">
  </label>
</p>
<p>
  <label>
    Example URL
    <input class="input" type="url" placeholder="https://...">
  </label>
</p>
<p>
  <label>
    Example Email
    <input class="input" type="email" placeholder="email@address.com">
  </label>
</p>
<p>
  <label>
    Example Select
    <select class="input">
      <option>1</option>
      <option>2</option>
      <option>3</option>
      <option>4</option>
      <option>5</option>
    </select>
  </label>
</p>
<p>
  <label>
    Example Textarea
    <textarea class="input" placeholder="Describe yourself here..."></textarea>
  </label>
</p>
<p>Todo</p>
<p>
  <label class="radio" style="
    line-height: 32px;
">
    <input type="radio" name="radio-group" checked="">
    <span>Example Radio</span>
  </label>
  <label class="radio">
    <input type="radio" name="radio-group">
    <span>Example Radio</span>
  </label>
  <label class="radio">
    <input type="radio" name="radio-group">
    <span>Example Radio</span>
  </label>
</p>
<p>
  <label class="checkbox">
    <input type="checkbox" name="checkbox-group" checked="">
    <span>Example Checkbox</span>
  </label>
  <label class="checkbox">
    <input type="checkbox" name="checkbox-group">
    <span>Example Checkbox</span>
  </label>
  <label class="checkbox">
    <input type="checkbox" name="checkbox-group">
    <span>Example Checkbox</span>
  </label>
</p>

<hr>
<ul>
  <li><strike>input[type=email]</strike></li>
  <li><strike>input[type=password]</strike></li>
  <li><strike>input[type=tel]</strike></li>
  <li><strike>input[type=text]</strike></li>
  <li><strike>input[type=url]</strike></li>
  <li><strike>select</strike></li>
  <li><strike>textarea</strike></li>
  <li>input[type=button]</li>
  <li>input[type=checkbox]</li>
  <li>input[type=color]</li>
  <li>input[type=date]</li>
  <li>input[type=datetime-local]</li>
  <li>input[type=file]</li>
  <li>input[type=hidden]</li>
  <li>input[type=image]</li>
  <li>input[type=month]</li>
  <li>input[type=number]</li>
  <li>input[type=radio]</li>
  <li>input[type=range]</li>
  <li>input[type=reset]</li>
  <li>input[type=search]</li>
  <li>input[type=submit]</li>
  <li>input[type=time]</li>
  <li>input[type=week]</li>
</ul>
<hr>
<p>Grids</p>

<div class="grid">
  <div class="col">
    <p>
      <label>
        Some Label
        <input class="input" type="text" placeholder="placeholder">
      </label>
    </p>
  </div>
  <div class="col">
    <p>
      <br>
      <button class="button block primary" type="button">OK</button>
    </p>
  </div>
</div></div>
    <div class="card" load-html="./docs/NOTES.html"><h1>CSS Framework</h1>
<p>Build a CSS Framework from Scratch!</p>
<h4>Todo</h4>
<ul>
  <li><a href="http://localhost:1337/github.html">Demo :: GitHub</a></li>
  <li><a href="http://expo.getbootstrap.com/">Bootstrap Expo</a></li>
  <li><a href="https://getbootstrap.com/docs/4.0/components/forms/">Bootstrap Inputs (well, forms)</a></li>
</ul>
<p>
  These symbols are nice
  ◄
  ►
  ▲
  ▼
</p>


<p>Frameworks can seem overwhelming.</p>
<p>After all <a href="https://github.com/twbs/bootstrap">Bootstrap</a> has 100,000+ stars, 15,000+ commits and over 1,000 contributors!</p>
<p>But here's the thing, making a framework is not only achievable, but a <em>great</em> way to prove your skills!</p>
<p>By completing this course you will sit alongside the greats...</p></div>
    <!-- Fundamentals -->
    <div class="card" load-html="./docs/normalize.html"><h1>Normalize.css</h1>
<p>
  <code>normalize.css</code>
</p>
<p>Provides better cross-browser consistency in the default styling of HTML elements.</p>
<p>Since it makes browsers render all elements more consistently, we can be confident that our Framework will render nicely in different browsers.</p>
<ul>
  <li><a href="https://necolas.github.io/normalize.css/" target="_blank">Normalize.css homepage</a></li>
  <li><a href="http://nicolasgallagher.com/about-normalize-css/" target="_blank">Read more about normalize.css</a></li>
</ul>
</div>
    <div class="card" load-html="./docs/typography.html"><h1>Typography</h1>
<p>
  <code>_typography.scss</code>
</p>
<blockquote>
  <p>We use use sensible defaults for basic typographic elements.</p>
  <p>Building upon <a href="https://necolas.github.io/normalize.css/">normalize.css</a>; we added uniform vertical margins to give predictable margin-collapse and layout.</p>
</blockquote>
<hr>
<h1>Heading 1 <small>small subtitle</small></h1>
<h2>Heading 2 <small>small subtitle</small></h2>
<h3>Heading 3 <small>small subtitle</small></h3>
<h4>Heading 4 <small>small subtitle</small></h4>
<h5>Heading 5 <small>small subtitle</small></h5>
<h6>Heading 6 <small>small subtitle</small></h6>
<p>Lorem ipsum dolor sit amet, <a href="http://localhost:1337/">this link should be legible to the color blind</a>. Phasellus tempor maximus diam ut congue. Quisque ac maximus est. Vivamus faucibus arcu et metus malesuada bibendum. <abbr title="Accredible Credential Management System">ACMS</abbr> tincidunt volutpat ultricies. Quisque scelerisque tellus vitae sapien porttitor laoreet. In arcu magna, <code>inline &lt;code&gt;</code>, tempus vestibulum odio. In non est non tellus aliquet tincidunt. Cras id nulla in <em>emphasis</em> lobortis tempus ac ac purus. Suspendisse potenti. <a href="http://localhost:1337/">A link</a> porttitor dapibus erat, et blandit leo. Aliquam eget justo ac diam finibus tempus. In hac habitasse platea dictumst. Nullam diam orci, <strong>strong</strong> eu magna sit amet, finibus pharetra turpis. Ut lacinia, neque eget dapibus feugiat, velit <a href="http://localhost:1337/">ligula blandit</a> est, porta consequat ipsum ipsum sit amet erat. Pellentesque malesuada diam eu mauris lobortis pretium.</p>
<ul>
  <li>unordered lists</li>
  <li>with multiple lines
    <ul>
      <li>and nesting</li>
      <li>of items</li>
    </ul>
  </li>
</ul>
<hr>
<ol>
  <li>ordered lists</li>
  <li>with multiple lines
    <ul>
      <li>and nesting</li>
      <li>of items</li>
    </ul>
  </li>
</ol>
<dl>
  <dt>Coffee</dt>
  <dt>Latte</dt>
  <dt>Tea</dt>
  <dd>Hot</dd>
  <dd>Caffeinated</dd>
  <dt>Milk</dt>
  <dd>Cold</dd>
  <dd>White</dd>
</dl>
<blockquote>
  <p>A blockquote acts as a standard block level container.</p>
  <p>It can accept any content, links, lists, images, headings etc.</p>
  <p>
    <cite>A citation</cite>
  </p>
</blockquote>
<address>
  Written by <a href="mailto:webmaster@example.com">Jon Doe</a>.<br>
  Visit us at:<br>
  Example.com<br>
  Box 564, Disneyland<br>
  USA
</address>
<pre>&lt;iframe
src="https://accredible.com/directory/accredible"
width="800"
height="600"
frameborder="0"
allowfullscreen&gt;
&lt;/iframe&gt;</pre>
<p>
  <code>&lt;kbd&gt;</code> elements are an inline element used to render keyboard keys. Try this:
  <kbd>ctrl</kbd> +
  <kbd>alt</kbd> +
  <kbd>del</kbd>
</p>
</div>
    <div class="card" load-html="./docs/text-modifiers.html"><h1>Text Modifiers</h1>
<p>
  <code>_text-modifiers.scss</code>
</p>
<p class="text-primary">.text-primary</p>
<p class="text-success">.text-success</p>
<p class="text-info">.text-info</p>
<p class="text-warning">.text-warning</p>
<p class="text-danger">.text-danger</p>
<p class="text-muted">.text-muted</p>
<p class="text-left">.text-left</p>
<p class="text-center">.text-center</p>
<p class="text-right">.text-right</p>
<p class="text-overflow">.text-overflow - This element is limited to a single line of text. It does not wrap. Is has an elipsis overflow… Lorem ipsum dolor, sit amet consectetur adipisicing elit. Ea delectus unde cupiditate, consequuntur eum ipsam cumque eligendi est voluptatibus fuga nemo sunt vitae voluptatem dolore obcaecati ipsum omnis, molestiae neque.</p>
</div>
    <div class="card" load-html="./docs/images.html"><h1>Images</h1>
<p>
  <code>_images.scss</code>
</p>
<blockquote>
  <p><code>&lt;img class="responsive"&gt;</code></p>
  <p>Forces an image to act as a full-width block, thus expanding to it's container.</p>
  <p>Figures and figcaptions have basic styling, with the same vertical margins as other typographical elements.</p>
  <p>Consider using a <code>&lt;figure&gt;</code> &amp; for <code>&lt;figcaption&gt;</code> improved semantics.</p>
</blockquote>
<hr>
<p>
  The image fills the width of it's <strong>container</strong>, and maintains proportions...
  <button type="button" class="button" onclick="document.querySelector(&#39;#responsive-image-container&#39;).style.width = 100+Math.round(Math.random()*300)+&#39;px&#39;;">Randomize Container Width</button>
</p>
<figure id="responsive-image-container" style="width: 200px; background-color: #eeeeee; padding: 10px; margin-left: auto; margin-right: auto;">
  <img class="responsive" src="./CSS Framework_files/MU2dD8E.jpg">
  <figcaption>This image is responsive, and maintains it's natural proportion.</figcaption>
</figure>
</div>
    <div class="card" load-html="./docs/responsive-media.html"><h1>Responsive Media</h1>
<p>
  <code>_responsive-media.scss</code>
</p>
<blockquote>
  <p><code>&lt;div class="responsive-media-xxx"&gt;</code></p>
  <p>Constrains the child element to a fixed proportion, while being full-width.</p>
  <p>Useful for (but not limited to) <code>&lt;iframe&gt;</code>, <code>&lt;media&gt;</code>, <code>&lt;object&gt;</code> and <code>&lt;video&gt;</code>.</p>
  <p>Consider using a <code>&lt;figure&gt;</code> &amp; for <code>&lt;figcaption&gt;</code> improved semantics.</p>
  <p>
    Modifiers:
    <code>.responsive-media-16x9</code>,
    <code>.responsive-media-4x3</code>
  </p>
</blockquote>
<hr>
<p>
  Setting the width of the container will maintain proportion...
  <button type="button" class="button" onclick="document.querySelector(&#39;#responsive-media-container&#39;).style.width = 100+Math.round(Math.random()*300)+&#39;px&#39;;">Randomize Container Width</button>
</p>
<figure id="responsive-media-container" style="width: 200px; background-color: #eeeeee; padding: 10px; margin-left: auto; margin-right: auto;">
  <div class="responsive-media-16x9">
    <iframe src="./CSS Framework_files/5GH8-_qSXSU.html" frameborder="0" allowfullscreen="" title="¿Téo? - Palm Trees"></iframe>
  </div>
  <figcaption>This iframe is responsive, and maintains a <code>6×9</code> proportion.</figcaption>
</figure>
</div>
    <div class="card" load-html="./docs/tables.html"><h1>Tables</h1>
<p>
  <code>_tables.scss</code>
</p>
<blockquote>
  <p>Tables act like block elements; they have 100% width and the same margins as other <a href="http://localhost:1337/#containers">container</a> elements.</p>
</blockquote>
<hr>
<h2>Default Table</h2>
<table class="table">
  <thead>
    <tr>
      <th>Id</th>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2345</td>
      <td>David King</td>
      <td>Top Bloke</td>
    </tr>
    <tr>
      <td>2345</td>
      <td>David King</td>
      <td>Top Bloke</td>
    </tr>
    <tr>
      <td>2345</td>
      <td>David King</td>
      <td>Top Bloke</td>
    </tr>
  </tbody>
</table>

<h2>Bordered</h2>
<table class="table bordered">
  <thead>
    <tr>
      <th>Id</th>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2345</td>
      <td>David King</td>
      <td>Top Bloke</td>
    </tr>
    <tr>
      <td>2345</td>
      <td>David King</td>
      <td>Top Bloke</td>
    </tr>
    <tr>
      <td>2345</td>
      <td>David King</td>
      <td>Top Bloke</td>
    </tr>
  </tbody>
</table>

<h2>Striped</h2>
<table class="table striped">
  <thead>
    <tr>
      <th>Id</th>
      <th>Name</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>2345</td>
      <td>David King</td>
      <td>Top Bloke</td>
    </tr>
    <tr>
      <td>2345</td>
      <td>David King</td>
      <td>Top Bloke</td>
    </tr>
    <tr>
      <td>2345</td>
      <td>David King</td>
      <td>Top Bloke</td>
    </tr>
  </tbody>
</table>

<h2>Hover</h2>
<table class="table hover">
  <thead>
    <tr>
      <th></th>
      <th>Id</th>
      <th class="hover"><span class="text-muted">►</span> Name</th>
      <th class="hover"><span class="text-muted">►</span> Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><input type="checkbox"></td>
      <td>2345</td>
      <td>David King</td>
      <td>Top Bloke</td>
    </tr>
    <tr class="selected">
      <td><input type="checkbox" checked=""></td>
      <td>2345</td>
      <td>David King</td>
      <td>Top Bloke</td>
    </tr>
    <tr>
      <td><input type="checkbox"></td>
      <td>2345</td>
      <td>David King</td>
      <td>Top Bloke</td>
    </tr>
  </tbody>
</table>


<h2>Responsive</h2>
<div class="table-responsive">
  <table class="table">
    <thead>
      <tr>
        <th>Header</th>
        <th>Header</th>
        <th>Header</th>
        <th>Header</th>
        <th>Header</th>
        <th>Header</th>
        <th>Header</th>
        <th>Header</th>
        <th>Header</th>
        <th>Header</th>
        <th>Header</th>
        <th>Header</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
      </tr>
      <tr>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
      </tr>
      <tr>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
        <td>Cell</td>
      </tr>
    </tbody>
  </table>
</div></div>
    <!-- Custom -->
    <div class="card" load-html="./docs/grids.html"><h1>Grids</h1>
<p>
  <code>_grids.scss</code>
</p>
<blockquote>
  <p><code>&lt;div class="grid"&gt;</code></p>
  <p>Creates a flexbox grid where all direct children <code>&gt; *</code> act as cells.</p>
  <p>Adds gutters between cells with horizontal-padding.</p>
  <h4>Notes on vertical margins</h4>
  <p>The grid does not apply any vertical margins or vertical padding, as such, it is <strong>not</strong> a Container or a Contained Element.</p>
  <p>Use <strong>Contained Elements</strong> within the cells to get the expected behaviour...</p>
  <p>...or apply <code>@include contained-margin</code> to the cells themselves; see <code>_form.scss</code></p>
  <h4>Todo</h4>
  <ul>
    <li>Move (or add) responsive classes to the cells themselves ala bootstrap</li>
    <li>Be more like <a href="http://getbootstrap.com/docs/4.1/layout/grid/">Bootstrap</a> - note their <a href="https://github.com/twbs/bootstrap/blob/v4-dev/scss/mixins/_grid-framework.scss#L17">breakpoint-infix</a> function</li>
  </ul>
</blockquote>
<hr>
<!-- Automatic Widths -->
<h3>Automatic Widths</h3>
<p>By default, the grid creates equal-sized cells.</p>
<div class="grid">
  <div class="col"><div class="example-grid-content">Lorum</div></div>
  <div class="col"><div class="example-grid-content">Ipsum dolor</div></div>
  <div class="col"><div class="example-grid-content">Sit amet</div></div>
</div>
<div class="grid">
  <div class="col"><div class="example-grid-content">.col</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
</div>
<!-- Nesting -->
<h3>Nesting</h3>
<p>Nesting <em>just works</em>.</p>
<div class="grid">
  <div class="col">
    <div class="example-grid-content">
      .col
      <div class="grid">
        <div class="col"><div class="example-grid-content">.col</div></div>
        <div class="col"><div class="example-grid-content">.col</div></div>
        <div class="col"><div class="example-grid-content">.col</div></div>
      </div>
    </div>
  </div>
  <div class="col">
    <div class="example-grid-content">
      .col
      <div class="grid">
        <div class="col"><div class="example-grid-content">.col</div></div>
        <div class="col"><div class="example-grid-content">.col</div></div>
        <div class="col"><div class="example-grid-content">.col</div></div>
      </div>
    </div>
  </div>
</div>
<!-- Fixed Number of Columns -->
<h3>Fixed Number of Columns</h3>
<p>Use <code>.grid.cols-NUMCOLUMNS</code> to disable automatic sizing and use a fixed number of columns.</p>
<p>Range: <code>.grid.cols-1</code> to <code>.grid.cols-12</code>. Here we use <code>.grid.cols-4</code> to make each column 1/4 width.</p>
<div class="grid cols-4">
  <div class="col"><div class="example-grid-content">.col</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
</div>
<!-- Fractional Cell Widths -->
<h3>Fractional Cell Widths</h3>
<p>You can define individual cell sizes using the format <code>.col-NUMERATOR-DENOMINATOR</code></p>
<p>Range: <code>.col-1-2</code> to <code>.col-11-12</code>. Where <code>.col-A-B</code> represents the fraction <code>A / B</code>, for example <code>.col-2-3</code> = <code>2 / 3 width</code></p>
<div class="grid">
  <div class="col col-1-2"><div class="example-grid-content">.col.col-1-2</div></div>
  <div class="col col-1-2"><div class="example-grid-content">.col.col-1-2</div></div>
</div>
<div class="grid">
  <div class="col col-1-4"><div class="example-grid-content">.col.col-1-4</div></div>
  <div class="col col-1-2"><div class="example-grid-content">.col.col-1-2</div></div>
  <div class="col col-1-4"><div class="example-grid-content">.col.col-1-4</div></div>
</div>
<div class="grid">
  <div class="col col-1-4"><div class="example-grid-content">.col.col-1-4</div></div>
  <div class="col col-1-4"><div class="example-grid-content">.col.col-1-4</div></div>
  <div class="col col-1-2"><div class="example-grid-content">.col.col-1-2</div></div>
</div>
<div class="grid">
  <div class="col col-1-3"><div class="example-grid-content">.col.col-1-3</div></div>
  <div class="col col-1-6"><div class="example-grid-content">.col.col-1-6</div></div>
  <div class="col col-1-12"><div class="example-grid-content">...</div></div>
  <div class="col col-5-12"><div class="example-grid-content">.col.col-5-12</div></div>
</div>
<div class="grid">
  <div class="col col-1-3"><div class="example-grid-content">.col.col-1-3</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
</div>
<!-- Cell Cling -->
<h3>Cell Cling</h3>
<p>Use <code>.col.cling</code> to make a cell "scale to fit" it's contents.</p>
<div class="grid">
  <div class="col cling"><div class="example-grid-content">.col.cling</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
</div>
<div class="grid">
  <div class="col cling"><div class="example-grid-content">.col.cling will also <strong>grow</strong> the cell to fit the contents, as needed.</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
</div>
<div class="grid">
  <div class="col"><div class="example-grid-content">.col</div></div>
  <div class="col cling"><div class="example-grid-content">.col.cling</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
  <div class="col cling"><div class="example-grid-content">.col.cling</div></div>
</div>
<!-- Responsivity -->
<h3>Responsivity</h3>
<p>You can define individual cell sizes using the format <code>.col-lte-BREAKPOINT-NUMERATOR-DENOMINATOR</code>.</p>
<p>Where <code>BREAKPOINT</code> is a responsive breakpoint - <code>xs</code>, <code>sm</code>, <code>md</code>, <code>lg</code> or <code>xl</code></p>
<p>For Example</p>
<ul>
  <li><code>.col-lte-xs-1-2</code> is <code>1 / 2</code> wide on <em>"extra-small"</em> screens.</li>
  <li><code>.col-lte-sm-3-4</code> is <code>3 / 4</code> wide on <em>"small or smaller"</em> screens.</li>
  <li><code>.col-lte-md-4-5</code> is <code>4 / 5</code> wide on <em>"medium or smaller"</em> screens.</li>
  <li><code>.col-lte-lg-2-7</code> is <code>2 / 7</code> wide on <em>"large or smaller"</em> screens.</li>
  <li><code>.col-lte-xl-3-4</code> - since all screens are <em>"extra-large or smaller"</em> this is equivilent to <code>.col-3-4</code></li>
</ul>
<p>Range:  to . Where <code>.col-A-B</code> represents the fraction <code>A / B</code>, for example <code>.col-2-3</code> = <code>2 / 3 width</code></p>
<div class="grid">
  <div class="col col-1-3 col-lte-md-1-1"><div class="example-grid-content">.col.col-1-3.col-lte-md-1-1</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
</div>
<!-- Alignment -->
<h3>Alignment</h3>
<p>The default behaviour is to stretch to the same height as the neighbours.</p>
<div class="grid">
  <div class="col"><div class="example-grid-content">This cell is<br>is triple<br>height</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
</div>
<p>Use <code>.grid.align-middle</code> and <code>.grid.align-bottom</code> modifers to the grid to affect all cells.</p>
<div class="grid align-middle">
  <div class="col"><div class="example-grid-content">This cell<br>is triple<br>height</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
</div>
<div class="grid align-bottom">
  <div class="col"><div class="example-grid-content">This cell<br>is triple<br>height</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
  <div class="col"><div class="example-grid-content">.col</div></div>
</div>
<p>...these same modifiers can be used on individual cells.</p>
<div class="grid">
  <div class="col"><div class="example-grid-content">This cell<br>is triple<br>height</div></div>
  <div class="col align-middle"><div class="example-grid-content">.col.align-middle</div></div>
  <div class="col align-bottom"><div class="example-grid-content">.col.align-bottom</div></div>
</div>



</div>
    <div class="card" load-html="./docs/buttons.html"><h1>Buttons</h1>
<p>
  <code>_buttons.scss</code>
</p>
<blockquote>
    <p><code>&lt;button type="button" class="button"&gt;</code></p>
    <p><code>&lt;button type="submit" class="button"&gt;</code></p>
  <p>Renders a styled button.</p>
  <p>
    Modifiers:
    <code>.primary</code>
    <code>.success</code>
    <code>.info</code>
    <code>.warning</code>
    <code>.danger</code>
    <code>.large</code>
    <code>.small</code>
    <code>.block</code>
  </p>
</blockquote>
<hr>
<p>Buttons <strong>must</strong> have a <code>[type]</code> attribute to render correctly. Why? The default value is <strong>submit</strong>, which is often not the desired behaviour (<a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button#attr-type" target="_blank">reference</a>).</p>
<p>
  <button type="button" class="button">
    &lt;button <strong>type="button"</strong> class="button"&gt;
  </button>
  <button class="button">
    &lt;button class="button"&gt;
  </button>
</p>
<p>
  Lorem ipsum dolor sit amet consectetur adipisicing elit. At, a! Animi esse praesentium dolorem, sit ut soluta delectus illum tempore exercitationem ducimus recusandae aliquam deleniti laborum expedita natus ipsa reprehenderit.
  <button type="button" class="button">
    Default
  </button>
  Lorem ipsum dolor sit amet consectetur adipisicing elit. At, a! Animi esse praesentium dolorem, sit ut soluta delectus illum tempore exercitationem ducimus recusandae aliquam deleniti laborum expedita natus ipsa reprehenderit.
</p>
<hr>
<p>Buttons have a number of <code>.modifiers</code>, and can be <code>[disabled]</code></p>
<p>
  <button type="button" class="button">
    Default
  </button>
  <button type="button" class="button primary">
    Primary
  </button>
  <button type="button" class="button success">
    Success
  </button>
  <button type="button" class="button info">
    Info
  </button>
  <button type="button" class="button warning">
    Warning
  </button>
  <button type="button" class="button danger">
    Danger
  </button>
</p>
<p>
  <button type="button" class="button" disabled="">
    Default
  </button>
  <button type="button" class="button primary" disabled="">
    Primary
  </button>
  <button type="button" class="button success" disabled="">
    Success
  </button>
  <button type="button" class="button info" disabled="">
    Info
  </button>
  <button type="button" class="button warning" disabled="">
    Warning
  </button>
  <button type="button" class="button danger" disabled="">
    Danger
  </button>
</p>
<p>
  <button type="button" class="button large">
    Large
  </button>
  <button type="button" class="button">
    Default
  </button>
  <button type="button" class="button small">
    Small
  </button>
</p>
<hr>
<p>Buttons have good support for inline elements</p>
<p>
  <button type="button" class="button">
    Default
  </button>
  <button type="button" class="button primary">
    <i class="options"></i>
    Primary
  </button>
  <button type="button" class="button success">
    Success
    <em>yes!</em>
  </button>
  <button type="button" class="button info">
    <kbd>⌘</kbd>
    CMD
  </button>
  <button type="button" class="button warning">
    Eek!
    <code>code: red</code>
  </button>
  <button type="button" class="button danger">
    I'm
    <strong>strong</strong>
  </button>
</p>
<hr>
<p>Buttons can act as blocks with the <code>.block</code> modifier</p>
<p>
  <button type="button" class="button block">
    Block Button
  </button>
</p>
</div>
    <div class="card" load-html="./docs/button-groups.html"><h1>Button Groups</h1>
<p>
  <code>_button-groups.scss</code>
</p>
<blockquote>
  <p><code>&lt;span class="button-group"&gt;</code> or <code>&lt;div class="button-group"&gt;</code></p>
  <p>Renders a group of <code>button</code> elements</p>
  <p>Modifiers: <code>.block</code></p>
</blockquote>
<hr>
<p>Standard <code>span.button-group</code> containing <code>.button</code> elements.</p>
<p>
  <span class="button-group">
    <button type="button" class="button">
      <i class="options"></i>
      Option 1
    </button>
    <button type="button" class="button">
      <i class="settings"></i>
      Option 2
    </button>
    <button type="button" class="button">
      <i class="certificate"></i>
      3rd option
    </button>
  </span>
  plays well inline
</p>
<p>With the <code>.block</code> modifier</p>
<p>
  <span class="button-group block">
    <button type="button" class="button">
      <i class="options"></i>
      Option 1
    </button>
    <button type="button" class="button info">
      <i class="settings"></i>
      Option 2
    </button>
    <button type="button" class="button success">
      <i class="certificate"></i>
      3rd option
    </button>
  </span>
</p>
</div>
    <div class="card" load-html="./docs/close.html"><h1>Close</h1>
<p>
  <code>_close.scss</code>
</p>
<blockquote>
  <p><code>&lt;span class="close"&gt;</code></p>
  <p>An inline, close element.</p>
  <p>Modifiers: <code>.small</code>, <code>.large</code></p>
</blockquote>
<hr>
<!-- Inline Testing -->
<p>Works inline <span class="close"></span> and has a small <span class="close small"></span> and large modifier <span class="close large"></span></p>
</div>
    <div class="card" load-html="./docs/cards.html"><h1>Cards</h1>
<p>
  <code>_cards.scss</code>
</p>
<blockquote>
  <p><code>&lt;div class="card"&gt;</code></p>
  <p>Is a simple container element.</p>
  <p>Top tip! Use a <code>&lt;hr class="yank"&gt;</code> element to divide into sections.</p>
</blockquote>
<hr>
<p>Our dashboard interface has large 'card' elements that house all the options / views. These are versatile, as long elements can be placed in expandable cards, they can group content at different sizes, show hidden content, etc.</p>
<p>Cards re-size to the width of their containers, allowing them to be flexibly used in any width of column.</p>
<div class="card">
  <h3>
    Standard Card
    <span class="chip">chip</span>
  </h3>
  <hr class="yank">
  <h4>Example Content</h4>
  <ul>
    <li>Any content can go in a card.</li>
    <li>Want more than title / footer? Any number of sections can go in a card.</li>
  </ul>
  <hr class="yank">
  <p>
    <button type="button" class="button primary block large">I understand cards</button>
  </p>
  <hr class="yank">
  <p>One last section ... for kicks.</p>
</div>

<div class="card">
  <h4>Card Yank</h4>
  <p class="yank">
    <img class="responsive" src="./CSS Framework_files/space-2.jpg" width="100%">
  </p>
  <p>We have added <code>.yank</code> to the <code>&lt;p&gt;</code> tag that wraps the image. This adds the relevant negative margins, pulling the image to the edges of the card.</p>
  <p>Use this for any element, from <code>iframe</code> to <code>certificate</code> and <code>.responsive-embed</code>.</p>
</div>

<h2>Consider Deprecating?</h2>

<a href="http://localhost:1337/">
  <div class="card">
    <h3>Active card</h3>
    <p>When a card is surrounded by an <code>&lt;a&gt;</code> tag, the whole card hightlights on hover.</p>
  </div>
</a>

<div class="card inactive">
  <h3>Inactive</h3>
  <p class="text-danger">should this be <code>a[disabled]</code>?</p>
  <hr class="yank">
  <h4>is there info that you want displayed, but not appear editable?</h4>
  <p>Add <code>.inactive</code> to the <code>div.card</code> to mute the colors, and disable interaction.</p>
</div>
  </div>
    <div class="card" load-html="./docs/display.html"><h1>Display</h1>
<p>
  <code>_display.scss</code>
</p>
<blockquote>
  <p>Utility classes for responsive behaviour</p>
</blockquote>
<hr>
<!-- Hidden -->
<h2>Hidden</h2>
<table class="table">
  <tbody>
    <tr>
      <td><code>.hidden-eq-xs</code> <span class="hidden-eq-xs">y</span></td>
      <td><code>.hidden-gte-xs</code> <span class="hidden-gte-xs">y</span></td>
      <td><code>.hidden-lte-xs</code> <span class="hidden-lte-xs">y</span></td>
    </tr>
    <tr>
      <td><code>.hidden-eq-sm</code> <span class="hidden-eq-sm">y</span></td>
      <td><code>.hidden-gte-sm</code> <span class="hidden-gte-sm">y</span></td>
      <td><code>.hidden-lte-sm</code> <span class="hidden-lte-sm">y</span></td>
    </tr>
    <tr>
      <td><code>.hidden-eq-md</code> <span class="hidden-eq-md">y</span></td>
      <td><code>.hidden-gte-md</code> <span class="hidden-gte-md">y</span></td>
      <td><code>.hidden-lte-md</code> <span class="hidden-lte-md">y</span></td>
    </tr>
    <tr>
      <td><code>.hidden-eq-lg</code> <span class="hidden-eq-lg">y</span></td>
      <td><code>.hidden-gte-lg</code> <span class="hidden-gte-lg">y</span></td>
      <td><code>.hidden-lte-lg</code> <span class="hidden-lte-lg">y</span></td>
    </tr>
    <tr>
      <td><code>.hidden-eq-xl</code> <span class="hidden-eq-xl">y</span></td>
      <td><code>.hidden-gte-xl</code> <span class="hidden-gte-xl">y</span></td>
      <td><code>.hidden-lte-xl</code> <span class="hidden-lte-xl">y</span></td>
    </tr>
  </tbody>
</table>
<!-- Visible -->
<h2>Visible</h2>
<table class="table">
  <tbody>
    <tr>
      <td><code>.visible-eq-xs</code> <span class="visible-eq-xs">y</span></td>
      <td><code>.visible-gte-xs</code> <span class="visible-gte-xs">y</span></td>
      <td><code>.visible-lte-xs</code> <span class="visible-lte-xs">y</span></td>
    </tr>
    <tr>
      <td><code>.visible-eq-sm</code> <span class="visible-eq-sm">y</span></td>
      <td><code>.visible-gte-sm</code> <span class="visible-gte-sm">y</span></td>
      <td><code>.visible-lte-sm</code> <span class="visible-lte-sm">y</span></td>
    </tr>
    <tr>
      <td><code>.visible-eq-md</code> <span class="visible-eq-md">y</span></td>
      <td><code>.visible-gte-md</code> <span class="visible-gte-md">y</span></td>
      <td><code>.visible-lte-md</code> <span class="visible-lte-md">y</span></td>
    </tr>
    <tr>
      <td><code>.visible-eq-lg</code> <span class="visible-eq-lg">y</span></td>
      <td><code>.visible-gte-lg</code> <span class="visible-gte-lg">y</span></td>
      <td><code>.visible-lte-lg</code> <span class="visible-lte-lg">y</span></td>
    </tr>
    <tr>
      <td><code>.visible-eq-xl</code> <span class="visible-eq-xl">y</span></td>
      <td><code>.visible-gte-xl</code> <span class="visible-gte-xl">y</span></td>
      <td><code>.visible-lte-xl</code> <span class="visible-lte-xl">y</span></td>
    </tr>
  </tbody>
</table>
</div>
    <div class="card" load-html="./docs/chips-and-tags.html"><h1>Chips and Tags</h1>
<p>
  <code>_chips.scss</code>
  <code>_tags.scss</code>
</p>
<blockquote>
  <p><code>&lt;ANY class="chip"&gt;</code></p>
  <p><code>&lt;ANY class="tag"&gt;</code></p>
  <p>
    Modifiers:
    <code>.success</code>
    <code>.info</code>
    <code>.warning</code>
    <code>.danger</code>
  </p>
</blockquote>
<hr>
<p>
  <span class="chip">Default</span>
  <span class="chip primary">Primary</span>
  <span class="chip success">Success</span>
  <span class="chip info">Info</span>
  <span class="chip warning">Warning</span>
  <span class="chip danger">Danger</span>
</p>
<p>
  <span class="tag">Default</span>
  <span class="tag primary">Primary</span>
  <span class="tag success">Success</span>
  <span class="tag info">Info</span>
  <span class="tag warning">Warning</span>
  <span class="tag danger">Danger</span>
</p>
<p><span class="chip block">With the <code>.block</code> modifier</span></p>
<p><span class="tag block">With the <code>.block</code> modifier</span></p>
<p>Chips can look unusual with wrapped text.</p>
<p>
  <span class="chip">Lorem ipsum dolor sit amet. Phasellus tempor maximus diam ut congue. Quisque ac maximus est. Vivamus faucibus arcu et metus malesuada bibendum. Tincidunt volutpat ultricies.</span>
</p>
<p>You can combine the <code>.block</code> modifier with <code>.text-overflow</code> to neatly prevent wrapping</p>
<p>
  <span class="chip block text-overflow">Lorem ipsum dolor sit amet. Phasellus tempor maximus diam ut congue. Quisque ac maximus est. Vivamus faucibus arcu et metus malesuada bibendum. Tincidunt volutpat ultricies.</span>
</p>
<p>These elements match the <code>&lt;p&gt; line-height</code> exactly. Thus, they butt up when wrapping:</p>
<p>
  <span class="chip">prosper</span>
  <span class="tag">concept</span>
  <span class="chip">inside</span>
  <span class="tag">monstrous</span>
  <span class="chip">health</span>
  <span class="tag">elite</span>
  <span class="chip">slab</span>
  <span class="tag">repetition</span>
  <span class="chip">script</span>
  <span class="tag">coverage</span>
  <span class="chip">pattern</span>
  <span class="tag">convenience</span>
  <span class="chip">siege</span>
  <span class="tag">method</span>
  <span class="chip">pupil</span>
  <span class="tag">agenda</span>
  <span class="chip">platform</span>
  <span class="tag">extort</span>
  <span class="chip">slot</span>
  <span class="tag">chaos</span>
  <span class="chip">reader</span>
  <span class="tag">folk</span>
  <span class="chip">strength</span>
</p>
<p>To cater for this, see <a href="http://localhost:1337/#tokens">Tokens</a>.</p>
</div>
  </div>

  <footer>
    <div class="page">
      <p>
        FOOTER
      </p>
    </div>
  </footer>



</body></html>